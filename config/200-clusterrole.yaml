# Copyright 2020 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-binding-admin
  labels:
    bindings.labs.vmware.com/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      servicebinding.io/controller: "true"
  # legacy support
  - matchLabels:
      service.binding/controller: "true"
# rules are automatically filled in at runtime.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-binding-core
  labels:
    bindings.labs.vmware.com/release: devel
    servicebinding.io/controller: "true"
rules:
  - apiGroups: [""]
    resources: ["configmaps", "services", "secrets", "events", "namespaces"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"] # finalizers are needed for the owner reference of the webhook
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-binding-crd
  labels:
    bindings.labs.vmware.com/release: devel
    servicebinding.io/controller: "true"
rules:
  - apiGroups: ["servicebinding.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["bindings.labs.vmware.com"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["internal.bindings.labs.vmware.com"]
    resources: ["*"]
    verbs: ["*"]
---
# This piece of the aggregated cluster role enables us to bind to the built-in
# Kubernetes apps resources
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-binding-apps
  labels:
    bindings.labs.vmware.com/release: devel
    servicebinding.io/controller: "true"
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "statefulsets"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
# This piece of the aggregated cluster role enables us to bind to
# Knative service resources
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-binding-knative-serving
  labels:
    bindings.labs.vmware.com/release: devel
    servicebinding.io/controller: "true"
rules:
  - apiGroups: ["serving.knative.dev"]
    resources: ["services", "configurations"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-binding-app-viewer
  labels:
    # Add these permissions to the "app-viewer" role.
    apps.tanzu.vmware.com/aggregate-to-app-viewer: "true"
rules:
- apiGroups: ["servicebinding.io"]
  resources: ["servicebindings"]
  verbs: ["get","list","watch"]
