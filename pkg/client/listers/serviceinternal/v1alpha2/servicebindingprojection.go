/*
Copyright 2020 VMware, Inc.
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/vmware-labs/service-bindings/pkg/apis/serviceinternal/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceBindingProjectionLister helps list ServiceBindingProjections.
type ServiceBindingProjectionLister interface {
	// List lists all ServiceBindingProjections in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.ServiceBindingProjection, err error)
	// ServiceBindingProjections returns an object that can list and get ServiceBindingProjections.
	ServiceBindingProjections(namespace string) ServiceBindingProjectionNamespaceLister
	ServiceBindingProjectionListerExpansion
}

// serviceBindingProjectionLister implements the ServiceBindingProjectionLister interface.
type serviceBindingProjectionLister struct {
	indexer cache.Indexer
}

// NewServiceBindingProjectionLister returns a new ServiceBindingProjectionLister.
func NewServiceBindingProjectionLister(indexer cache.Indexer) ServiceBindingProjectionLister {
	return &serviceBindingProjectionLister{indexer: indexer}
}

// List lists all ServiceBindingProjections in the indexer.
func (s *serviceBindingProjectionLister) List(selector labels.Selector) (ret []*v1alpha2.ServiceBindingProjection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ServiceBindingProjection))
	})
	return ret, err
}

// ServiceBindingProjections returns an object that can list and get ServiceBindingProjections.
func (s *serviceBindingProjectionLister) ServiceBindingProjections(namespace string) ServiceBindingProjectionNamespaceLister {
	return serviceBindingProjectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceBindingProjectionNamespaceLister helps list and get ServiceBindingProjections.
type ServiceBindingProjectionNamespaceLister interface {
	// List lists all ServiceBindingProjections in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.ServiceBindingProjection, err error)
	// Get retrieves the ServiceBindingProjection from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.ServiceBindingProjection, error)
	ServiceBindingProjectionNamespaceListerExpansion
}

// serviceBindingProjectionNamespaceLister implements the ServiceBindingProjectionNamespaceLister
// interface.
type serviceBindingProjectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceBindingProjections in the indexer for a given namespace.
func (s serviceBindingProjectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.ServiceBindingProjection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ServiceBindingProjection))
	})
	return ret, err
}

// Get retrieves the ServiceBindingProjection from the indexer for a given namespace and name.
func (s serviceBindingProjectionNamespaceLister) Get(name string) (*v1alpha2.ServiceBindingProjection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("servicebindingprojection"), name)
	}
	return obj.(*v1alpha2.ServiceBindingProjection), nil
}
